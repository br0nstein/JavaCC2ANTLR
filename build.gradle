buildscript {
    ext.kotlin_version = '1.6.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'java'
    id 'antlr'
    id 'idea'
    id 'application'
}

repositories {
    mavenLocal()
    mavenCentral()
}

project.group = "com.strumenta"
project.version = "0.1"

mainClassName = "com.strumenta.javacc.JavaCCToAntlrConverter"

dependencies {
    antlr 'org.antlr:antlr4:4.9.3'
    implementation 'org.antlr:antlr4-runtime:4.9.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'me.tomassetti:kolasu:0.2.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'

    implementation group: 'net.java.dev.javacc', name: 'javacc', version: '7.0.3'
    implementation 'com.github.julianthome:inmemantlr-api:1.7.0'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'com.strumenta.javacc']
    outputDirectory = new File("generated-src/antlr/main/com/strumenta/javacc".toString())
}
sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileGeneratedJava.enabled false
compileGeneratedKotlin.enabled false
compileJava {
    dependsOn generateGrammarSource
    source sourceSets.generated.java, sourceSets.main.java
}
compileKotlin {
    dependsOn generateGrammarSource
    dependsOn generateGeneratedGrammarSource
    source sourceSets.generated.java, sourceSets.main.java, sourceSets.main.kotlin
}

clean {
    delete "generated-src"
}

idea {
    module {
        //sourceDirs += file("generated-src/antlr/main")
    }
}

